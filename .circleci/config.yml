version: 2

workflows:
  version: 2
  default:
    jobs:
      - test-3.6-mpich
      - test-3.6-openmpi
      - test-3.7-mpich
      - test-3.7-openmpi

jobs:

  test-3.6-mpich:
    docker:
      - image: continuumio/miniconda:latest

    environment:
      PYTHON: "3.6"
      ENV_NAME: "dask-mpi-dev"
      MPI: "mpich"

    steps:
      - checkout
      - restore_cache:
          key: deps-{{ .Branch }}-3.6-mpich-{{ checksum ".circleci/env-3.6-mpich.yml" }}
      - run:
          name: Install and activate conda environment
          command: .circleci/install.sh
      - run:
          name: Running tests
          command: |
            source activate ${ENV_NAME}
            pytest --junitxml=test-reports/junit.xml --cov=./ dask_mpi/tests/ --verbose
      - save_cache:
          key: deps-{{ .Branch }}-3.6-mpich-{{ checksum ".circleci/env-3.6-mpich.yml" }}
          paths:
            - "/opt/conda/envs/${ENV_NAME}/"
            - "/opt/conda/pkgs"
      - run:
          name: Code Coverage
          command: |
            source activate ${ENV_NAME}

            echo "[Uploading Coverage]"
            codecov

  test-3.6-openmpi:
    docker:
      - image: continuumio/miniconda:latest

    environment:
      PYTHON: "3.6"
      ENV_NAME: "dask-mpi-dev"
      MPI: "openmpi"
      OMPI_MCA_rmaps_base_oversubscribe: "1"
      ALLOW_RUN_AS_ROOT: "1"

    steps:
      - checkout
      - restore_cache:
          key: deps-{{ .Branch }}-3.6-openmpi-{{ checksum ".circleci/env-3.6-openmpi.yml" }}
      - run:
          name: Install and activate conda environment
          command: .circleci/install.sh
      - run:
          name: Running tests
          command: |
            source activate ${ENV_NAME}
            pytest --junitxml=test-reports/junit.xml --cov=./ dask_mpi/tests/ --verbose
      - save_cache:
          key: deps-{{ .Branch }}-3.6-openmpi-{{ checksum ".circleci/env-3.6-openmpi.yml" }}
          paths:
            - "/opt/conda/envs/${ENV_NAME}/"
            - "/opt/conda/pkgs"

  test-3.7-mpich:
    docker:
      - image: continuumio/miniconda:latest

    environment:
      PYTHON: "3.7"
      ENV_NAME: "dask-mpi-dev"
      MPI: "mpich"

    steps:
      - checkout
      - restore_cache:
          key: deps-{{ .Branch }}-3.7-mpich-{{ checksum ".circleci/env-3.7-mpich.yml" }}
      - run:
          name: Install and activate conda environment
          command: .circleci/install.sh
      - run:
          name: Running tests
          command: |
            source activate ${ENV_NAME}
            pytest --junitxml=test-reports/junit.xml --cov=./ dask_mpi/tests/ --verbose
      - save_cache:
          key: deps-{{ .Branch }}-3.7-mpich-{{ checksum ".circleci/env-3.7-mpich.yml" }}
          paths:
            - "/opt/conda/envs/${ENV_NAME}/"
            - "/opt/conda/pkgs"
      - run:
          name: Code Coverage
          command: |
            source activate ${ENV_NAME}

            echo "[Uploading Coverage]"
            codecov

  test-3.7-openmpi:
    docker:
      - image: continuumio/miniconda:latest

    environment:
      PYTHON: "3.7"
      ENV_NAME: "dask-mpi-dev"
      MPI: "openmpi"
      OMPI_MCA_rmaps_base_oversubscribe: "1"
      ALLOW_RUN_AS_ROOT: "1"

    steps:
      - checkout
      - restore_cache:
          key: deps-{{ .Branch }}-3.7-openmpi-{{ checksum ".circleci/env-3.7-openmpi.yml" }}
      - run:
          name: Install and activate conda environment
          command: .circleci/install.sh
      - run:
          name: Running tests
          command: |
            source activate ${ENV_NAME}
            pytest --junitxml=test-reports/junit.xml --cov=./ dask_mpi/tests/ --verbose
      - run:
          name: Linting
          command: |
            source activate ${ENV_NAME}
            black dask_mpi --check
            flake8 dask_mpi
      - save_cache:
          key: deps-{{ .Branch }}-3.7-openmpi-{{ checksum ".circleci/env-3.7-openmpi.yml" }}
          paths:
            - "/opt/conda/envs/${ENV_NAME}/"
            - "/opt/conda/pkgs"
